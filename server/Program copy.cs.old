namespace space.parzival.DiscordRPCProxy.Server;

using System;
using System.Text;

public static class Program {
  public static void Main(string[] args) {
    byte[] demo = new byte[] { 
      0x00,0x00,0x00,0x00,0x29,0x00,0x00,0x00,0x7B,0x22,0x76,
      0x22,0x3A,0x31,0x2C,0x22,0x63,0x6C,0x69,0x65,0x6E,0x74,
      0x5F,0x69,0x64,0x22,0x3A,0x22,0x31,0x30,0x35,0x30,0x38,
      0x38,0x38,0x33,0x39,0x33,0x35,0x30,0x36,0x31,0x36,0x38,
      0x39,0x30,0x32,0x22,0x7D
    };

    // demo = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x7B, 0x7D };
    
    foreach (var byteData in demo)
    {
      Console.Write($"0x{Convert.ToString(byteData, 16).PadLeft(2, '0')} ");
    }
    Console.WriteLine();


    // demo header
    byte[] header = new byte[8];
    Array.Copy(demo, 0, header, 0, 8);

    // get opcode
    int opcode = header[0];
    Console.WriteLine($"OPCODE = {opcode}");
    
    // get char count
    byte[] headerCharCount = new byte[4];
    Array.Copy(header, 1, headerCharCount, 0, 4);
    if (BitConverter.IsLittleEndian) Array.Reverse(headerCharCount);
    int charCount = BitConverter.ToInt32(headerCharCount, 0);
    Console.WriteLine($"CHARCOUNT = {charCount}");

    // get message
    byte[] message = new byte[charCount];
    Array.Copy(demo, header.Length, message, 0, charCount);
    Console.WriteLine($"MESSAGE = {Encoding.UTF8.GetString(message)}");
  }

  private static void PrintByteArray(byte[] data) {
    for (int i = 0; i < data.Length; i++)
    {
      byte b = data[i];

      Console.Write($"{Convert.ToString(b, 2).PadLeft(8, '0')}");

      Console.Write(" ");
    }
    Console.WriteLine();
  }
}